// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/account": {
            "post": {
                "description": "Creates a new account in the database with the provided request body.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Create a new account.",
                "parameters": [
                    {
                        "description": "Account data",
                        "name": "CreateAccountRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/GetAccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/account/{id}": {
            "get": {
                "description": "Retrieves an existing account record that matches the provided ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Retrieve an existing account.",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"0b6ecded-fa9d-4b39-a309-9ef501de15f4\"",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GetAccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an existing account record that matches the provided ID including its associated data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Delete an existing account.",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"0b6ecded-fa9d-4b39-a309-9ef501de15f4\"",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GetAccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates an existing account in the database with the provided request body.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Update an existing account.",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"0b6ecded-fa9d-4b39-a309-9ef501de15f4\"",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Account data",
                        "name": "UpdateAccountRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GetAccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/account/{id}/activate": {
            "patch": {
                "description": "Activate an existing account record that matches the provided ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Activate an existing account.",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"0b6ecded-fa9d-4b39-a309-9ef501de15f4\"",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GetAccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/account/{id}/deactivate": {
            "patch": {
                "description": "Deactivate an existing account record that matches the provided ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Deactivate an existing account.",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"0b6ecded-fa9d-4b39-a309-9ef501de15f4\"",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GetAccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "CreateAccountRequest": {
            "type": "object",
            "required": [
                "dateOfBirth",
                "email",
                "firstName",
                "lastName",
                "locations",
                "password",
                "phone"
            ],
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "dateOfBirth": {
                    "type": "string",
                    "example": "2000-11-12T13:14:15Z"
                },
                "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "firstName": {
                    "type": "string",
                    "example": "John"
                },
                "lastName": {
                    "type": "string",
                    "example": "Doe"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CreateAddressRequest"
                    }
                },
                "password": {
                    "type": "string",
                    "minLength": 10,
                    "example": "t5eC9E6ldLmaf"
                },
                "phone": {
                    "type": "string",
                    "example": "09066871243"
                }
            }
        },
        "CreateAddressRequest": {
            "type": "object",
            "required": [
                "city",
                "country",
                "district",
                "postalCode",
                "state",
                "street"
            ],
            "properties": {
                "city": {
                    "type": "string",
                    "example": "San Pedro"
                },
                "country": {
                    "type": "string",
                    "example": "Philippines"
                },
                "district": {
                    "type": "string",
                    "example": "Laguna"
                },
                "postalCode": {
                    "type": "string",
                    "example": "4023"
                },
                "state": {
                    "type": "string",
                    "example": "Calabarzon"
                },
                "street": {
                    "type": "string",
                    "example": "365 Talon I Real 1740"
                },
                "unit": {
                    "type": "string",
                    "example": "Unit 206 Rm. 5"
                }
            }
        },
        "Err": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "GetAccountResponse": {
            "type": "object",
            "properties": {
                "dateOfBirth": {
                    "type": "string",
                    "example": "2000-11-12T13:14:15Z"
                },
                "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "firstName": {
                    "type": "string",
                    "example": "John"
                },
                "id": {
                    "type": "string",
                    "example": "63237c24-c6f3-49bd-808b-e7764e75ebd1"
                },
                "lastName": {
                    "type": "string",
                    "example": "Doe"
                },
                "phone": {
                    "type": "string",
                    "example": "09066871243"
                }
            }
        },
        "HTTPError": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/Err"
                }
            }
        },
        "UpdateAccountRequest": {
            "type": "object",
            "properties": {
                "dateOfBirth": {
                    "type": "string",
                    "example": "2000-11-12T13:14:15Z"
                },
                "firstName": {
                    "type": "string",
                    "example": "John"
                },
                "lastName": {
                    "type": "string",
                    "example": "Doe"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UpdateAddressRequest"
                    }
                },
                "phone": {
                    "type": "string",
                    "example": "09066871243"
                }
            }
        },
        "dto.UpdateAddressRequest": {
            "type": "object",
            "required": [
                "street"
            ],
            "properties": {
                "city": {
                    "type": "string",
                    "example": "San Pedro"
                },
                "country": {
                    "type": "string",
                    "example": "Philippines"
                },
                "district": {
                    "type": "string",
                    "example": "Laguna"
                },
                "id": {
                    "type": "string",
                    "example": "3d3e36e1-9533-4408-8677-9d693a9ed8d4"
                },
                "postalCode": {
                    "type": "string",
                    "example": "4023"
                },
                "state": {
                    "type": "string",
                    "example": "Calabarzon"
                },
                "street": {
                    "type": "string",
                    "example": "365 Talon I Real 1740"
                },
                "unit": {
                    "type": "string",
                    "example": "Unit 206 Rm. 5"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
